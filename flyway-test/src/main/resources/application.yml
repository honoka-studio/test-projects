server:
  port: 8081

spring:
  application:
    name: flyway-test
  datasource:
    driver-class-name: org.sqlite.JDBC
    url: jdbc:sqlite:./data/${spring.application.name}.db
  flyway:
    enabled: true
    # SQL的存放路径，可为多个
    # SQL的命名规则为：V[版本号]__[文件名].sql，如：V1__update.sql
    locations: classpath:flyway/sql
    #
    # 若数据库非空，且库中不存在flyway的更新记录表（默认为flyway_schema_history），是否先创建
    # 更新记录表，然后基于baseline-version配置项所设定的版本号的下一个版本号开始依次执行，若后
    # 一个版本号不存在，则寻找最近的一个版本号。
    #
    # 若baseline-on-migrate设置为false，则当数据库非空，且库中不存在flyway的更新记录表时，将
    # 在Spring Boot启动时抛出异常。
    #
    # 当数据库为空时，flyway在任何情况下都会从第一个版本的SQL文件开始执行。
    #
    baseline-on-migrate: true
    #
    # 若数据库非空，且库中不存在flyway的更新记录表，则在更新记录表中插入一条记录，将当前数据库
    # 的状态视为已处于baseline-version所指定的版本号。
    #
    baseline-version: 1
    #
    # 是否在执行前校验SQL语法与文件内容是否被更改（通过flyway的更新记录表中记录的文件的checksum
    # 来校验）。
    #
    # 由于不同的数据库可能有不同的语法，flyway的校验在某些情况下可能无法得到正确的结果，因此应当
    # 默认禁用。
    #
    validate-on-migrate: false
    # 是否禁用数据库清理，若不禁用，执行SQL前将在数据库非空时删除库中所有表
    clean-disabled: true
    # SQL校验发生错误时是否删除库中所有表
    clean-on-validation-error: false
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

mybatis-plus:
  # classpath*:mapper/**/*.xml为默认值，默认扫描resources/mapper目录及其子目录下所有xml文件
  mapper-locations: classpath*:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true

logging:
  level:
    de.honoka.test.flyway.mapper: debug